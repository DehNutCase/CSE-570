Script started on Thu 28 May 2020 11:17:19 PM PDT
]0;dehnutcase@Lenovo-PC: /mnt/c/Users/Ken/Desktop/CSE 570/Lab3[01;32mdehnutcase@Lenovo-PC[00m:[01;34m/mnt/c/Users/Ken/Desktop/CSE 570/Lab3[00m$ python3 lab3.py
For file = "g419":
Printing Productions:
E:
E+T
T

F:
(E)
i

S:
E

T:
F
T*F

Printing kernels of the canonical states of the grammar:

Format of a state is: [{dictionary of non_terminals: dictionary of productions}, symbol}]
i.e. a state of the form [{'S': {'.A': true}}, '('] has the production S -> .A, and is reached
by calling goto(I, '(')
Note that the added state "S'" isn't produced by goto, hence it doesn't have a symbol

State # 0  is
[{"S'": {".S": true}}]
State # 1  is
[{"S'": {"S.": true}}, "S"]
State # 2  is
[{"F": {"i.": true}}, "i"]
State # 3  is
[{"S": {"E.": true}, "E": {"E.+T": true}}, "E"]
State # 4  is
[{"T": {"T.*F": true}, "E": {"T.": true}}, "T"]
State # 5  is
[{"T": {"F.": true}}, "F"]
State # 6  is
[{"F": {"(.E)": true}}, "("]
State # 7  is
[{"E": {"E.+T": true}, "F": {"(E.)": true}}, "E"]
State # 8  is
[{"T": {"T*.F": true}}, "*"]
State # 9  is
[{"E": {"E+.T": true}}, "+"]
State # 10  is
[{"T": {"T*F.": true}}, "F"]
State # 11  is
[{"T": {"T.*F": true}, "E": {"E+T.": true}}, "T"]
State # 12  is
[{"F": {"(E).": true}}, ")"]

Printing the canonical states of the grammar:
Obtained by calling closure(I) on the kernel of a state
State # 0  is
{'S': {'.E': True}, 'T': {'.T*F': True, '.F': True}, 'E': {'.T': True, '.E+T': True}, "S'": {'.S': True}, 'F': {'.i': True, '.(E)': True}}
State # 1  is
Obtained by goto(I,  S )
{"S'": {'S.': True}}
State # 2  is
Obtained by goto(I,  i )
{'F': {'i.': True}}
State # 3  is
Obtained by goto(I,  E )
{'S': {'E.': True}, 'E': {'E.+T': True}}
State # 4  is
Obtained by goto(I,  T )
{'T': {'T.*F': True}, 'E': {'T.': True}}
State # 5  is
Obtained by goto(I,  F )
{'T': {'F.': True}}
State # 6  is
Obtained by goto(I,  ( )
{'T': {'.T*F': True, '.F': True}, 'E': {'.T': True, '.E+T': True}, 'F': {'.i': True, '(.E)': True, '.(E)': True}}
State # 7  is
Obtained by goto(I,  E )
{'E': {'E.+T': True}, 'F': {'(E.)': True}}
State # 8  is
Obtained by goto(I,  * )
{'T': {'T*.F': True}, 'F': {'.i': True, '.(E)': True}}
State # 9  is
Obtained by goto(I,  + )
{'T': {'.T*F': True, '.F': True}, 'E': {'E+.T': True}, 'F': {'.i': True, '.(E)': True}}
State # 10  is
Obtained by goto(I,  F )
{'T': {'T*F.': True}}
State # 11  is
Obtained by goto(I,  T )
{'T': {'T.*F': True}, 'E': {'E+T.': True}}
State # 12  is
Obtained by goto(I,  ) )
{'F': {'(E).': True}}

For file = "g417":
Printing Productions:
E:
E+T
T

F:
(E)
i

S:
E

T:
F
T*F

Printing kernels of the canonical states of the grammar:

Format of a state is: [{dictionary of non_terminals: dictionary of productions}, symbol}]
i.e. a state of the form [{'S': {'.A': true}}, '('] has the production S -> .A, and is reached
by calling goto(I, '(')
Note that the added state "S'" isn't produced by goto, hence it doesn't have a symbol

State # 0  is
[{"S'": {".S": true}}]
State # 1  is
[{"S'": {"S.": true}}, "S"]
State # 2  is
[{"F": {"i.": true}}, "i"]
State # 3  is
[{"S": {"E.": true}, "E": {"E.+T": true}}, "E"]
State # 4  is
[{"T": {"T.*F": true}, "E": {"T.": true}}, "T"]
State # 5  is
[{"T": {"F.": true}}, "F"]
State # 6  is
[{"F": {"(.E)": true}}, "("]
State # 7  is
[{"E": {"E.+T": true}, "F": {"(E.)": true}}, "E"]
State # 8  is
[{"T": {"T*.F": true}}, "*"]
State # 9  is
[{"E": {"E+.T": true}}, "+"]
State # 10  is
[{"T": {"T*F.": true}}, "F"]
State # 11  is
[{"T": {"T.*F": true}, "E": {"E+T.": true}}, "T"]
State # 12  is
[{"F": {"(E).": true}}, ")"]

Printing the canonical states of the grammar:
Obtained by calling closure(I) on the kernel of a state
State # 0  is
{'S': {'.E': True}, 'T': {'.T*F': True, '.F': True}, 'E': {'.T': True, '.E+T': True}, "S'": {'.S': True}, 'F': {'.i': True, '.(E)': True}}
State # 1  is
Obtained by goto(I,  S )
{"S'": {'S.': True}}
State # 2  is
Obtained by goto(I,  i )
{'F': {'i.': True}}
State # 3  is
Obtained by goto(I,  E )
{'S': {'E.': True}, 'E': {'E.+T': True}}
State # 4  is
Obtained by goto(I,  T )
{'T': {'T.*F': True}, 'E': {'T.': True}}
State # 5  is
Obtained by goto(I,  F )
{'T': {'F.': True}}
State # 6  is
Obtained by goto(I,  ( )
{'T': {'.T*F': True, '.F': True}, 'E': {'.T': True, '.E+T': True}, 'F': {'.i': True, '(.E)': True, '.(E)': True}}
State # 7  is
Obtained by goto(I,  E )
{'E': {'E.+T': True}, 'F': {'(E.)': True}}
State # 8  is
Obtained by goto(I,  * )
{'T': {'T*.F': True}, 'F': {'.i': True, '.(E)': True}}
State # 9  is
Obtained by goto(I,  + )
{'T': {'.T*F': True, '.F': True}, 'E': {'E+.T': True}, 'F': {'.i': True, '.(E)': True}}
State # 10  is
Obtained by goto(I,  F )
{'T': {'T*F.': True}}
State # 11  is
Obtained by goto(I,  T )
{'T': {'T.*F': True}, 'E': {'E+T.': True}}
State # 12  is
Obtained by goto(I,  ) )
{'F': {'(E).': True}}

]0;dehnutcase@Lenovo-PC: /mnt/c/Users/Ken/Desktop/CSE 570/Lab3[01;32mdehnutcase@Lenovo-PC[00m:[01;34m/mnt/c/Users/Ken/Desktop/CSE 570/Lab3[00m$ exit

Script done on Thu 28 May 2020 11:17:24 PM PDT
